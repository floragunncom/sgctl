# Kibana is served by a back end server. This controls which port to use.
# server.port: 5601

# The host to bind the server to.
server.host: "0.0.0.0"

# disable the welcome screen for automated testing
home.disableWelcomeScreen: true

# Search Guard plugin specific settings
searchguard.multitenancy.enabled: true
searchguard.multitenancy.show_roles: true
searchguard.multitenancy.enable_filter: true
searchguard.multitenancy.tenants.enable_global: false
searchguard.multitenancy.tenants.enable_private: true

searchguard.multitenancy.tenants.preferred: [ "private" ]

searchguard.auth.type: basicauth

searchguard.cookie.password: "mc2293cj298nc9238hc9283hc9823hc928c929h9"

# If you are running kibana behind a proxy, and want to mount it at a path,
# specify that path here. The basePath can't end in a slash.
#server.basePath: "/mybasepath"

# The maximum payload size in bytes on incoming server requests.
# server.maxPayloadBytes: 1048576

# The Elasticsearch instance to use for all your queries.
elasticsearch.hosts: "https://sgssl-0.example.com:9200"

# preserve_elasticsearch_host true will send the hostname specified in `elasticsearch`. If you set it to false,
# then the host you use to connect to *this* Kibana instance will be sent.
# elasticsearch.preserveHost: true

# Kibana uses an index in Elasticsearch to store saved searches, visualizations
# and dashboards. It will create a new index if it doesn't already exist.
# kibana.index: ".kibana"

# The default application to load.
# kibana.defaultAppId: "discover"

# If your Elasticsearch is protected with basic auth, these are the user credentials
# used by the Kibana server to perform maintenance on the kibana_index at startup. Your Kibana
# users will still need to authenticate with Elasticsearch (which is proxied through
# the Kibana server)
elasticsearch.username: "kibanaserver"
elasticsearch.password: "kibanaserver"

server.ssl.enabled: true
server.ssl.certificate: ./config/kibana.crtfull.pem
server.ssl.key: ./config/kibana.key.pem

# Optional setting to validate that your Elasticsearch backend uses the same key files (PEM formatted)
#elasticsearch.ssl.certificate: /search-guard-ssl/example-pki-scripts/kibana.crt.pem
#elasticsearch.ssl.key: /search-guard-ssl/example-pki-scripts/kibana.key

# If you need to provide a CA certificate for your Elasticsearch instance, put
# the path of the pem file here.
elasticsearch.ssl.certificateAuthorities: /search-guard-ssl/example-pki-scripts/root-ca.pem

# Set to false to have a complete disregard for the validity of the SSL
# certificate.
elasticsearch.ssl.verificationMode: full

# Time in milliseconds to wait for elasticsearch to respond to pings, defaults to
# request_timeout setting
# elasticsearch.pingTimeout: 1500

# Time in milliseconds to wait for responses from the back end or elasticsearch.
# This must be > 0
# elasticsearch.requestTimeout: 30000

# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten
# by client-side headers.

#JWT token
#{
#  "alg": "HS256",
#  "typ": "JWT"
#}
#{
#  "iat": "1486852541",
#  "username": "hr_employee"
#  "roles": "hr"
#}
#key: n0d40cb84-bee3-11e6-af7c-cb9aba35abc5
#elasticsearch.customHeaders: {jwttoken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImhyX2VtcGxveWVlIiwicm9sZXMiOiJociIsImlkIjpudWxsLCJpYXQiOjE0ODY4NTI1NDF9.1A6ircYWr4nCB1hEDMq-sLheG0ON_8ccRxNd1KlE03U}

# Header whitelisting
elasticsearch.requestHeadersWhitelist: ["sg_impersonate_as", "sgtenant", "authorization", "x-forwarded-for", "x-proxy-user", "x-proxy-roles", "sg_impersonate_as"]


# Time in milliseconds for Elasticsearch to wait for responses from shards.
# Set to 0 to disable.
# elasticsearch.shardTimeout: 0

# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying
# elasticsearch.startupTimeout: 5000

# Set the path to where you would like the process id file to be created.
# pid.file: /var/run/kibana.pid

# If you would like to send the log output to a file you can set the path below.
#logging.dest: /shareddata/kibana.log

# Set this to true to suppress all logging output.
# logging.silent: false

# Set this to true to suppress all logging output except for error messages.
logging.quiet: false

# Set this to true to log all events, including system usage information and all requests.
# logging.verbose: false

server.publicBaseUrl: "https://kibana.example.com:5601"
security.showInsecureClusterWarning: false
